{
    "version": "https://jsonfeed.org/version/1",
    "title": "学习笔记小站",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/10/09/NIO/",
            "url": "http://example.com/2023/10/09/NIO/",
            "title": "Netty",
            "date_published": "2023-10-09T09:29:58.335Z",
            "content_html": "<h1 id=\"nio\"><a class=\"markdownIt-Anchor\" href=\"#nio\">#</a> NIO</h1>\n<h2 id=\"使用nio\"><a class=\"markdownIt-Anchor\" href=\"#使用nio\">#</a> 使用 NIO</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 读取和写入随机访问文件</span></span><br><span class=\"line\"><span class=\"type\">RandomAccessFile</span> <span class=\"variable\">file</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RandomAccessFile</span>(<span class=\"string\">&quot;D:/test.txt&quot;</span>,<span class=\"string\">&quot;rw&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 获得文件通道</span></span><br><span class=\"line\"><span class=\"type\">FileChannel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> file.getChannel();</span><br><span class=\"line\"><span class=\"comment\">// 开辟缓冲区 48字节</span></span><br><span class=\"line\"><span class=\"type\">ByteBuffer</span> <span class=\"variable\">allocate</span> <span class=\"operator\">=</span> ByteBuffer.allocate(<span class=\"number\">48</span>);</span><br><span class=\"line\"><span class=\"comment\">//从通道中进行写入到缓冲区中</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">bytesRead</span> <span class=\"operator\">=</span> channel.write(allocate);</span><br><span class=\"line\"><span class=\"keyword\">while</span> (bytesRead!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 写模式转读模式</span></span><br><span class=\"line\">    allocate.flip();</span><br><span class=\"line\">    <span class=\"comment\">//如果position与limit上限之间有元素，则一个一个读取</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (allocate.hasRemaining()) &#123;</span><br><span class=\"line\">        System.out.println((<span class=\"type\">char</span>) allocate.get());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    allocate.clear();</span><br><span class=\"line\">    bytesRead = channel.read(allocate);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">file.close();</span><br></pre></td></tr></table></figure>\n<p><code>RandomAccessFile</code>  通过组合关联到 Channel</p>\n<p>采用 <code>ByteBuffer</code>  作为缓存区来读取数据</p>\n<h2 id=\"核心组成\"><a class=\"markdownIt-Anchor\" href=\"#核心组成\">#</a> 核心组成</h2>\n<p>I/O 与 NIO 的最重要的组成部分就是进行数据的打包和传输 NIO 是以块的方式进行处理数据</p>\n<p>NIO 的核心组成部分是：</p>\n<p>channel：通道优势是在于不用像流在一个方向上进行，而是可以进行双向的操作</p>\n<p>buffer：进行传输数据的缓冲区</p>\n<p>selector：</p>\n<p>允许一个 Selector 操作多个 Channel 进行使用，进行提供选择已经就绪的任务能力。Selector 允许单线程下处理多个 Channel，这样的好处是减少线程的上下文切换</p>\n<p>将 Selector 和 Channel 关系确定好，在通道处于就绪态后选择器就能进行进行查询到对应的 channel。</p>\n<p>Selector 是进行不停的查询对应 Channel 的就绪状态，并且挑选出对应操作就绪状态，有通道就绪态进行达成，放入选择集合中</p>\n<p>选择建是 NIO 中的关键，在其中包含了是 Selector 的通道操作类型，和通道对特定的选择器之间的注册关系。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用Selector</span></span><br><span class=\"line\"><span class=\"comment\">// 1.获取Selector选择器</span></span><br><span class=\"line\"><span class=\"type\">Selector</span> <span class=\"variable\">seletor</span> <span class=\"operator\">=</span> Selector.open();</span><br><span class=\"line\"><span class=\"comment\">// 2.将channel注册进入到Selector中</span></span><br><span class=\"line\"><span class=\"type\">ServerSockerChannel</span> <span class=\"variable\">channel</span> <span class=\"operator\">=</span> ServerSockerChannel().open();</span><br><span class=\"line\"><span class=\"comment\">// 3.设置为非阻塞</span></span><br><span class=\"line\">channel.configureBlocking(<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">// 绑定链接</span></span><br><span class=\"line\">channel.bind(<span class=\"keyword\">new</span> <span class=\"title class_\">InetSocketAddress</span>(SystemConfig.SOCKET_SERVER_PORT));</span><br><span class=\"line\"><span class=\"comment\">// 将通道注册到选择器上 并指定监听事件为 接受事件</span></span><br><span class=\"line\">channel.register(seletor,SelectionKey.OP_ACEEPT);</span><br></pre></td></tr></table></figure>\n<p><strong>注意：在使用 Selectort 下 Channel 一定要进行设置为非阻塞状态</strong></p>\n<p>使用选择器进行轮询查询操作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Set</span> <span class=\"variable\">selectedKeys</span> <span class=\"operator\">=</span> selector.selectedKeys();</span><br><span class=\"line\"><span class=\"type\">Iterator</span> <span class=\"variable\">keyIterator</span> <span class=\"operator\">=</span> selectedKeys.iterator();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span>(keyIterator.hasNext())&#123;</span><br><span class=\"line\">    <span class=\"type\">SelectionKey</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> keyIterator.next();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(key.isAcceptable())&#123;</span><br><span class=\"line\">        <span class=\"comment\">// </span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(key.isConnectable())&#123;</span><br><span class=\"line\">        <span class=\"comment\">// </span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// ....</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    keyIertarot.remove();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/10/09/Netty/",
            "url": "http://example.com/2023/10/09/Netty/",
            "title": "Netty",
            "date_published": "2023-10-09T09:29:51.937Z",
            "content_html": "<h1 id=\"netty\"><a class=\"markdownIt-Anchor\" href=\"#netty\">#</a> Netty</h1>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/10/09/hello-world/",
            "url": "http://example.com/2023/10/09/hello-world/",
            "title": "Hello World",
            "date_published": "2023-10-09T09:20:13.545Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}